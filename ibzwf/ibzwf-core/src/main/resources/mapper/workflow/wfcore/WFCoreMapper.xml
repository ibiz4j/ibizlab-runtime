<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper	namespace="cn.ibizlab.core.workflow.mapper.WFCoreMapper">

    <select id="searchMyTask"  parameterType="cn.ibizlab.core.workflow.filter.WFTaskSearchContext"  resultType="cn.ibizlab.core.workflow.domain.WFTask">
        select   t1.TaskId as Id, t1.DefinitionId as ProcessDefinitionId, t1.DefinitionName as ProcessDefinitionName, t1.DefinitionKey as ProcessDefinitionKey, t1.InstanceId as ProcessInstanceId,
        t1.TaskName as Name, t1.TaskDefinitionKey, t1.BusinessKey as ProcessInstanceBusinessKey, t1.Description, t1.CreateTime from (
        select res.ID_ as TaskId,res.PROC_DEF_ID_ as DefinitionId,arp.NAME_ as DefinitionName,arp.KEY_ as DefinitionKey,
        res.PROC_INST_ID_ as  InstanceId,res.NAME_ as TaskName,res.TASK_DEF_KEY_ as TaskDefinitionKey,res.CATEGORY_ as BusinessKey,
        res.DESCRIPTION_ as Description,res.CREATE_TIME_ as CreateTime
        from ACT_RU_TASK RES inner join act_re_procdef arp on RES.PROC_DEF_ID_ = arp.ID_
            where
            exists (select LINK.ID_ from  ACT_RU_IDENTITYLINK LINK where LINK.TASK_ID_ = RES.ID_  and LINK.USER_ID_ = #{srf.sessioncontext.srfuserid})
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
    </select>

    <select id="searchMyTaskByPage"  parameterType="cn.ibizlab.core.workflow.filter.WFTaskSearchContext"  resultType="java.util.Map">
        select distinct t1.TaskId as Id,USER_ID_ as UserId, t1.DefinitionId as ProcessDefinitionId, t1.DefinitionName as ProcessDefinitionName, t1.DefinitionKey as ProcessDefinitionKey, t1.InstanceId as
        ProcessInstanceId,
        t1.TaskName as Name, t1.TaskDefinitionKey, t1.BusinessKey as ProcessInstanceBusinessKey, t1.Description, t1.CreateTime from (
        select  res.ID_ as TaskId,link.USER_ID_,res.PROC_DEF_ID_ as DefinitionId,arp.NAME_ as DefinitionName,arp.KEY_ as DefinitionKey,
        res.PROC_INST_ID_ as  InstanceId,res.NAME_ as TaskName,res.TASK_DEF_KEY_ as TaskDefinitionKey,res.CATEGORY_ as BusinessKey,
        res.DESCRIPTION_ as Description,res.CREATE_TIME_ as CreateTime
        from ACT_RU_TASK RES inner join act_re_procdef arp on RES.PROC_DEF_ID_ = arp.ID_ left join ACT_RU_IDENTITYLINK link on res.ID_ = LINK.TASK_ID_
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
    </select>



    <select  id="searchMyTaskCnt"  parameterType="cn.ibizlab.core.workflow.filter.WFTaskSearchContext"  resultType="cn.ibizlab.core.workflow.domain.WFProcessNode">
        select t.ProcessDefinitionKey,max(t.ProcessDefinitionName) as ProcessDefinitionName,
        t.TaskDefinitionKey as UserTaskId,t.Name as UserTaskName,max(t.version) as version ,count(1) as Cnt from
        (select t1.TaskId as Id, t1.DefinitionId as ProcessDefinitionId, t1.DefinitionName as ProcessDefinitionName, t1.DefinitionKey as ProcessDefinitionKey, t1.InstanceId as ProcessInstanceId,
        t1.TaskName as Name, t1.TaskDefinitionKey, t1.BusinessKey as ProcessInstanceBusinessKey, t1.Description, t1.CreateTime,version from
        (
        select res.ID_ as TaskId,res.PROC_DEF_ID_ as DefinitionId,arp.NAME_ as DefinitionName,arp.KEY_ as DefinitionKey,arp.VERSION_ as version,
        res.PROC_INST_ID_ as  InstanceId,res.NAME_ as TaskName,res.TASK_DEF_KEY_ as TaskDefinitionKey,res.CATEGORY_ as BusinessKey,
        res.DESCRIPTION_ as Description,res.CREATE_TIME_ as CreateTime
        from ACT_RU_TASK RES
        inner join act_re_procdef arp on RES.PROC_DEF_ID_ = arp.ID_
        where exists (select LINK.ID_
        from ACT_RU_IDENTITYLINK LINK
        where LINK.TASK_ID_ = RES.ID_ and LINK.USER_ID_ = #{srf.sessioncontext.srfuserid})
        ) t1
        <where><if test="ew!=null and ew.sqlSegment!=null and !ew.emptyOfWhere">${ew.sqlSegment}</if></where>
        <if test="ew!=null and ew.sqlSegment!=null and ew.emptyOfWhere">${ew.sqlSegment}</if>
        ) t
        group by t.ProcessDefinitionKey,t.TaskDefinitionKey,t.Name  order by  t.ProcessDefinitionKey,  t.TaskDefinitionKey

    </select>


    <select id="searchUserTask"  parameterType="java.util.Map"  resultType="java.util.Map">
        select t2.id_ as  id ,t2.execution_id_ as execution from act_ru_identitylink  t1 inner join act_ru_task t2 on t1.task_id_ = t2.id_ where t1.USER_ID_ in
        <foreach collection="et.userids" item="userid" index="index" open="(" close=")" separator=",">
            #{userid}
        </foreach>
        and t2.PROC_INST_ID_=#{et.processinstanceid}
    </select>

</mapper>